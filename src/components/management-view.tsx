"use client";

/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/NW5MslhUPSm
 */
import { useEffect, useState } from "react";
import { fetchPlaylist } from "@/actions/playlists";
import { BasePlaylist, Playlist } from "@/types";
import PlaylistList from "./playlist-list";
import { PlaylistManager } from "./playlist-manager";

type Props = {
  playlists: BasePlaylist[]
}

export function ManagementView({ playlists }: Props) {
  const [selectedPlaylist, setSelectedPlaylist] = useState<Playlist | BasePlaylist | null>(playlists.length > 0 ? playlists[0] : null);
  const [selectedPlaylistId, setSelectedPlaylistId] = useState(playlists.length > 0 ? playlists[0].id : null);

  useEffect(() => {
    const abortController = new AbortController();
    const signal = abortController.signal;

    (async () => {
      if (!selectedPlaylistId) {
        return;
      }

      try {
        const details = await fetchPlaylist(selectedPlaylistId);

        if (!signal.aborted) {
          setSelectedPlaylist(details as Playlist);
        }
      } catch (error) {
        console.error("Failed to fetch playlist details", error);

        // TODO: how to log user out here? redirect to a logout page?
        // if (error instanceof AuthError) {
        //   return logout();
        // }

        throw error;
      }
    }
    )();
    return () => {
      // Cancel the request when the component unmounts
      abortController.abort();
    };

  }, [selectedPlaylistId]);

  function selectPlaylist(id: any): void {
    setSelectedPlaylistId(id);
    setSelectedPlaylist(null);
  }

  return (
    <div className="flex h-screen dark:bg-[#121212] dark:text-white">
      <PlaylistList playlists={playlists} selectedPlaylistId={selectedPlaylistId} selectPlaylistFn={selectPlaylist} />
      {
        selectedPlaylist && <PlaylistManager playlist={selectedPlaylist} />
      }
    </div>
  )
}
